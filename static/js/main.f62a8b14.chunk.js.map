{"version":3,"sources":["Components/Chart.jsx","App.js","index.js"],"names":["Chart","Countries","totalDeaths","className","style","position","width","height","data","labels","datasets","label","fill","borderColor","tension","options","maintainAspectRatio","animation","duration","easing","layout","padding","interaction","interact","mode","plugins","title","display","align","font","size","weight","text","tooltip","legend","color","App","useState","setCountries","settotalDeaths","isloading","setisloading","useEffect","a","axios","get","result","concetCountries","concetCountryDeaths","map","val","i","Country","concat","parseInt","TotalDeaths","split","fetchData","alignItems","justifyContent","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAiDeA,MA/Cf,YAAyC,IAAzBC,EAAwB,EAAxBA,UAAUC,EAAc,EAAdA,YAEtB,OACI,qBAAKC,UAAU,QAAQC,MAAO,CAACC,SAAW,WAAaC,MAAM,OAAOC,OAAO,SAA3E,SACG,cAAC,IAAD,CAAMC,KAAM,CACnBC,OAAQR,EACVS,SAAU,CAAC,CACTC,MAAO,eACPH,KAAMN,EACNU,MAAM,EACNC,YAAa,oBACbC,QAAS,MAETC,QAAW,CAACC,qBAAsB,EAAOC,UAAY,CAACC,SAAS,IAAMC,OAAQ,mBACrEC,OAAS,CACLC,QAAS,IAEdC,YAAc,CAACC,UAAW,EAAOC,KAAO,WACxCC,QAAU,CACNC,MAAQ,CACPC,SAAU,EACVtB,SAAU,OACVuB,MAAQ,SACRC,KAAM,CAACC,KAAM,GAAIC,OAAQ,QACzBV,QAAS,GACNW,KAAO,WAEXC,QAAU,GAGVC,OAAS,CACLN,MAAQ,SACRvB,SAAW,MAEXI,OAAS,CACL0B,MAAQ,QACPd,QAAU,GACVQ,KAAO,CAAEC,KAAO,aCGzBM,MApCf,WACE,MAAmCC,mBAAS,IAA5C,mBAAOpC,EAAP,KAAmBqC,EAAnB,KACA,EAAuCD,mBAAS,IAAhD,mBAAOnC,EAAP,KAAqBqC,EAArB,KACA,EAAmCF,oBAAS,GAA5C,mBAAOG,EAAP,KAAmBC,EAAnB,KAoBA,OAnBAC,qBAAU,YACO,uCAAG,kCAAAC,EAAA,sEACIC,IAAMC,IAAI,sCADd,OACXC,EADW,OAEXtC,EAAOsC,EAAOtC,KAAKP,UACtB8C,EAAiB,GACjBC,EAAsB,GACtBxC,EAAKyC,KAAI,SAACC,EAAKC,GAGb,OAFDJ,GAAe,UAAOG,EAAIE,QAAQC,OAAO,KAA1B,KACdL,EAAoBG,GAAKG,SAAS,GAAD,OAAKJ,EAAIK,YAAc,IAAvB,MAC1B,MAETR,EAAmBA,EAAgBS,MAAM,KAC3ClB,EAAaS,GACbR,EAAeS,GACfP,GAAa,GAbG,4CAAH,qDAefgB,KACA,IAGAjB,EAAY,qBAAKpC,MAAO,CAACG,OAAO,QAASD,MAAM,OAAQqB,QAAQ,OAAQ+B,WAAW,SAAUC,eAAe,UAA/F,SACZ,qBAAKC,IAAI,6DAA6DC,IAAI,OAE1E,mCACA,sBAAK1D,UAAU,MAAf,UACI,2FACD,cAAC,EAAD,CAAOF,UAAaA,EAAWC,YAAaA,UC/BnD4D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f62a8b14.chunk.js","sourcesContent":["import {Line} from 'react-chartjs-2';\r\n\r\nfunction Chart({Countries,totalDeaths}) {\r\n\r\n    return (\r\n        <div className='chart' style={{position : 'relative' , width:'95vw',height:'100vh' }}>\r\n           <Line data={{\r\n    labels: Countries,\r\n  datasets: [{\r\n    label: 'Total Deaths',\r\n    data: totalDeaths,\r\n    fill: false,\r\n    borderColor: 'rgb(75, 192, 192)',\r\n    tension: 0.1\r\n  }]\r\n}}  options = {{maintainAspectRatio : false, animation : {duration:2000, easing: 'easeInOutBounce'},\r\n            layout : {\r\n                padding: 30 \r\n            },\r\n           interaction : {interact : true , mode : 'nearest' } ,\r\n           plugins : {\r\n               title : {\r\n                display : true,\r\n                position: 'left',\r\n                align : 'center',\r\n                font: {size: 17, weight: 'bold'},\r\n                padding: 10,\r\n                   text : ' Deaths',\r\n               },\r\n               tooltip : {\r\n                   \r\n                },\r\n               legend : {\r\n                   align : 'center',\r\n                   position:  'top',\r\n                  \r\n                   labels : {\r\n                       color : 'black',\r\n                        padding : 20,\r\n                        font : { size : 17}\r\n                   }\r\n               }\r\n           }      \r\n        \r\n        }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Chart from './Components/Chart';\n\nfunction App() {\n  const [Countries , setCountries] = useState([]);\n  const [totalDeaths , settotalDeaths] = useState([]);\n  const [isloading , setisloading] = useState(true);\n  useEffect(()=>{\n    const fetchData = async ()=>{\n     const result = await axios.get('https://api.covid19api.com/summary');\n     const data = result.data.Countries;\n    let concetCountries ='' ;\n    let concetCountryDeaths = [] ;\n        data.map((val, i)=>{\n         concetCountries += `${val.Country.concat(',')} `;\n          concetCountryDeaths[i] = parseInt( `${val.TotalDeaths + ','} `);\n          return '';\n        })\n        concetCountries =  concetCountries.split(',');\n      setCountries(concetCountries);\n      settotalDeaths(concetCountryDeaths);\n      setisloading(false);\n    } \n    fetchData();\n  },[]);\n\n  return (\n    isloading ? <div style={{height:'100vh', width:'100%', display:'flex', alignItems:'center', justifyContent:'center'}}>\n    <img src='https://c.tenor.com/I6kN-6X7nhAAAAAj/loading-buffering.gif' alt='' />\n    </div>   :  \n    <>\n    <div className=\"app\">\n        <h1>Fetching Data of Covid19 using Axios and display in chart</h1>\n       <Chart Countries = {Countries} totalDeaths={totalDeaths} />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}